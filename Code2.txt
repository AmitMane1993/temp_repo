1. Statistical Methods

A. Chi-Square Test of Independence

Checks whether the two categorical variables are independent or associated.

import pandas as pd
import scipy.stats as stats

# Example dataframe
# df = pd.DataFrame({'cat1': [...], 'cat2': [...]})

# Create a contingency table
contingency_table = pd.crosstab(df['cat1'], df['cat2'])

# Perform Chi-square test
chi2, p, dof, expected = stats.chi2_contingency(contingency_table)

print("Chi-square Statistic:", chi2)
print("p-value:", p)
print("Degrees of Freedom:", dof)

Interpretation:

p < 0.05: significant association between the two categorical variables.

p >= 0.05: no evidence of association.



---

B. Cramér's V (Effect Size for Association Strength)

Use this to quantify how strongly the two categorical variables are associated.

import numpy as np

def cramers_v(confusion_matrix):
    chi2 = stats.chi2_contingency(confusion_matrix)[0]
    n = confusion_matrix.sum().sum()
    r, k = confusion_matrix.shape
    return np.sqrt(chi2 / (n * (min(r, k) - 1)))

cramers_v_value = cramers_v(contingency_table)
print("Cramér's V:", cramers_v_value)

Interpretation:

0.0 - 0.1: weak

0.1 - 0.3: moderate

0.3 - 0.5: strong

> 0.5: very strong association



---

2. Visualization Methods

A. Heatmap of Contingency Table

Helps you visually see the distribution and intensity of counts.

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(8, 6))
sns.heatmap(contingency_table, annot=True, fmt="d", cmap="YlGnBu")
plt.title("Heatmap of Categorical Association")
plt.xlabel("cat2")
plt.ylabel("cat1")
plt.show()

B. Stacked Bar Plot

contingency_table_norm = contingency_table.div(contingency_table.sum(axis=1), axis=0)

contingency_table_norm.plot(kind='bar', stacked=True, figsize=(10, 6), colormap="Set2")
plt.title("Stacked Bar Chart of cat1 vs cat2")
plt.xlabel("cat1")
plt.ylabel("Proportion")
plt.legend(title='cat2')
plt.show()

Interpretation:

If the proportions across cat2 vary significantly for each level of cat1, this indicates a likely relationship.



---

Summary

Let me know if you'd like help interpreting your real output or doing the reverse (e.g., predicting one category from another)!
